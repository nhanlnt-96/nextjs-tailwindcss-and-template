{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/jsx-runtime",
    "prettier"
  ],
  "overrides": [
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "react-hooks",
    "prettier",
    "simple-import-sort"
  ],
  "rules": {
    "react/react-in-jsx-scope": "off",
    "camelcase": "error",
    "spaced-comment": "error",
    "quotes": [
      "error",
      "single"
    ],
    "no-duplicate-imports": "error",
    "semi": [
      "error",
      "always"
    ],
    "jsx-quotes": [
      "error",
      "prefer-single"
    ],
    "no-unused-vars": [
      1,
      {
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": "return"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "multiline-const"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "export"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "case"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "expression"
      }
    ],
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Side effect imports.
          [
            "^\\u0000"
          ],
          // Packages.
          // Things that start with a letter (or digit or underscore)
          [
            "^\\w"
          ],
          // Absolute imports and other imports such as Vue-style `@/foo`.
          // Anything that does not start with a dot.
          [
            "^[^.]"
          ],
          // Relative imports.
          // Anything that starts with a dot.
          [
            "^\\."
          ]
        ]
      }
    ],
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "@typescript-eslint/no-explicit-any": "off"
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}